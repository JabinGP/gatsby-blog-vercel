{
    "componentChunkName": "component---src-components-post-js",
    "path": "/posts/code/docker-install-mongo",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker安装MongoDB\",\n  \"date\": \"2020-12-12T09:28:11.000Z\",\n  \"categories\": [\"code\"],\n  \"tags\": [\"docker\", \"mongodb\"],\n  \"draft\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u62C9\\u53D6\\u955C\\u50CF\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"docker pull mongo:latest\\n\")), mdx(\"h2\", null, \"\\u8FD0\\u884C\\u955C\\u50CF\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"docker run -itd --name mongo -p 27017:27017 mongo --auth\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"--auth\\uFF1AEnables authorization to control user\\u2019s access to database resources and operations. When authorization is enabled, MongoDB requires all clients to authenticate themselves first in order to determine the access for the client.\\nConfigure users via the mongo shell. If no users exist, the localhost interface will continue to have access to the database until you create the first user\\u3002\")), mdx(\"h2\", null, \"\\u8FDB\\u5165\\u5BB9\\u5668\\u6DFB\\u52A0\\u7528\\u6237\"), mdx(\"p\", null, \"\\u8FDB\\u5165\\u5BB9\\u5668\\u5E76\\u4E14\\u76F4\\u63A5\\u8FD0\\u884Cmongo-shell\\uFF0C\\u9009\\u62E9\\u6570\\u636E\\u5E93\\u4E3A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"admin\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"docker exec -it mongo mongo admin\\n\")), mdx(\"p\", null, \"\\u521B\\u5EFA\\u7528\\u6237\\u5E76\\u5C1D\\u8BD5\\u8FDE\\u63A5\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"db.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},\\\"readWriteAnyDatabase\\\"]});\\ndb.auth('admin', '123456')\\n\")), mdx(\"h2\", null, \"\\u9A8C\\u8BC1\\u8D26\\u6237\\u6743\\u9650\"), mdx(\"p\", null, \"\\u8FD0\\u884C\\u4E00\\u4E9B\\u7B80\\u5355\\u7684\\u6307\\u4EE4\\u6765\\u9A8C\\u8BC1\\u8D26\\u6237\\u7684\\u6709\\u6548\\u6027\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cmd\"\n  }, \"> show dbs\\nadmin   0.000GB\\nconfig  0.000GB\\nlocal   0.000GB\\n> show users\\n{\\n        \\\"_id\\\" : \\\"admin.admin\\\",\\n        \\\"userId\\\" : UUID(\\\"dc5760ea-c8c1-4f40-af5b-7d9d53779842\\\"),\\n        \\\"user\\\" : \\\"admin\\\",\\n        \\\"db\\\" : \\\"admin\\\",\\n        \\\"roles\\\" : [\\n                {\\n                        \\\"role\\\" : \\\"userAdminAnyDatabase\\\",\\n                        \\\"db\\\" : \\\"admin\\\"\\n                }\\n        ],\\n        \\\"mechanisms\\\" : [\\n                \\\"SCRAM-SHA-1\\\",\\n                \\\"SCRAM-SHA-256\\\"\\n        ]\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"categories":["code"],"date":"2020-12-12 09:28","draft":false,"tags":["docker","mongodb"],"title":"Docker安装MongoDB"}}},"pageContext":{"id":"8c5bc91f-023b-5b77-a833-1a40add72ca1"}},
    "staticQueryHashes": []}