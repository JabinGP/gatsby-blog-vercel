{
    "componentChunkName": "component---src-pages-post-js",
    "path": "/posts/draft/https",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Https\",\n  \"date\": \"2021-02-16T07:29:40.000Z\",\n  \"draft\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"openssl\"), mdx(\"p\", null, \"\\u5F00\\u6E90\\u7684\\u547D\\u4EE4\\u884C\\u5DE5\\u5177\\uFF0C\\u53EF\\u4EE5\\u7528\\u6765\\u751F\\u6210 keys \\uFF0C \\u8BC1\\u4E66 \\uFF0C CSR \"), mdx(\"h2\", null, \"\\u6B65\\u9AA4\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cnblogs.com/qiyueqi/p/11551238.html\"\n  }, \"https://www.cnblogs.com/qiyueqi/p/11551238.html\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u751F\\u6210 CA \\u79C1\\u94A5\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jabin@dev-ubuntu [01:59:05] [~/ssl]\\n-> % openssl genrsa -out local.key 2048\\nGenerating RSA private key, 2048 bit long modulus (2 primes)\\n...................+++++\\n..................+++++\\ne is 65537 (0x010001)\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u751F\\u6210 CA \\u8BC1\\u4E66\\u8BF7\\u6C42\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jabin@dev-ubuntu [01:59:25] [~/ssl]\\n-> % openssl req -new -key local.key -out local.csr\\nCan't load /home/jabin/.rnd into RNG\\n140594689962432:error:2406F079:random number generator:RAND_load_file:Cannot open file:../crypto/rand/randfile.c:88:Filename=/home/jabin/.rnd\\nYou are about to be asked to enter information that will be incorporated\\ninto your certificate request.\\nWhat you are about to enter is what is called a Distinguished Name or a DN.\\nThere are quite a few fields but you can leave some blank\\nFor some fields there will be a default value,\\nIf you enter '.', the field will be left blank.\\n-----\\nCountry Name (2 letter code) [AU]:CN\\nState or Province Name (full name) [Some-State]:GD\\nLocality Name (eg, city) []:SZ\\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:\\nOrganizational Unit Name (eg, section) []:dev\\nCommon Name (e.g. server FQDN or YOUR name) []:ubuntu\\nEmail Address []:dev@dev.com\\n\\nPlease enter the following 'extra' attributes\\nto be sent with your certificate request\\nA challenge password []:abc123\\nAn optional company name []:dev\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u751F\\u6210 CA \\u6839\\u8BC1\\u4E66\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jabin@dev-ubuntu [02:02:46] [~/ssl]\\n-> % openssl x509 -req -in local.csr -extensions v3_ca -signkey local.key -out local.crt\\nSignature ok\\nsubject=C = CN, ST = GD, L = SZ, O = Internet Widgits Pty Ltd, OU = dev, CN = ubuntu, emailAddress = dev@dev.com\\nGetting Private key\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u751F\\u6210server\\u79C1\\u5319\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jabin@dev-ubuntu [02:04:04] [~/ssl]\\n-> % openssl genrsa -out my_server.key 2048\\nGenerating RSA private key, 2048 bit long modulus (2 primes)\\n.....................................................................+++++\\n.........+++++\\ne is 65537 (0x010001)\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u751F\\u6210server\\u8BC1\\u4E66\\u8BF7\\u6C42\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jabin@dev-ubuntu [02:04:18] [~/ssl]\\n-> % openssl x509 -req -in local.csr -extensions v3_ca -signkey local.key -out local.crt\\nSignature ok\\nsubject=C = CN, ST = GD, L = SZ, O = Internet Widgits Pty Ltd, OU = dev, CN = ubuntu, emailAddress = dev@dev.com\\nGetting Private key\\njabin@dev-ubuntu [02:06:01] [~/ssl]\\n-> % openssl req -new -key my_server.key -out my_server.csr\\nCan't load /home/jabin/.rnd into RNG\\n139691214037440:error:2406F079:random number generator:RAND_load_file:Cannot open file:../crypto/rand/randfile.c:88:Filename=/home/jabin/.rnd\\nYou are about to be asked to enter information that will be incorporated\\ninto your certificate request.\\nWhat you are about to enter is what is called a Distinguished Name or a DN.\\nThere are quite a few fields but you can leave some blank\\nFor some fields there will be a default value,\\nIf you enter '.', the field will be left blank.\\n-----\\nCountry Name (2 letter code) [AU]:CN\\nState or Province Name (full name) [Some-State]:GD\\nLocality Name (eg, city) []:SZ\\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:dev\\nOrganizational Unit Name (eg, section) []:dev\\nCommon Name (e.g. server FQDN or YOUR name) []:ubuntu\\nEmail Address []:dev@dev.com\\n\\nPlease enter the following 'extra' attributes\\nto be sent with your certificate request\\nA challenge password []:abc123\\nAn optional company name []:dev\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u751F\\u6210server\\u8BC1\\u4E66\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"jabin@dev-ubuntu [02:06:49] [~/ssl]\\n-> %  openssl x509 -days 365 -req -in my_server.csr -extensions v3_req -CAkey local.key -CA local.crt -CAcreateserial -out my_server.crt\\nSignature ok\\nsubject=C = CN, ST = GD, L = SZ, O = dev, OU = dev, CN = ubuntu, emailAddress = dev@dev.com\\nGetting CA Private Key\\n\")))), mdx(\"h2\", null, \"Certbot\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.jianshu.com/p/1eb7060c5ede\"\n  }, \"https://www.jianshu.com/p/1eb7060c5ede\")), mdx(\"p\", null, \"certbot certonly --preferred-challenges dns --manual  -d \\\"*.bysir.cn\\\" --server \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://acme-v02.api.letsencrypt.org/directory\"\n  }, \"https://acme-v02.api.letsencrypt.org/directory\")), mdx(\"h1\", null, \"nginx \\u914D\\u7F6E\"), mdx(\"p\", null, \"\\u7701\\u7565\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"categories":null,"date":"2021-02-16 07:29","draft":true,"tags":null,"title":"Https"}}},"pageContext":{"id":"690cef71-a675-55fb-8069-b7d264ef66bd"}},
    "staticQueryHashes": []}